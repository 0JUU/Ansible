YAML

1. 특징
 1)Playbook은 YAML로 표현된다.
 2) 다른 것보다 쉽게 작성할 수 있다.
 3) XML 또는 JSON과 같은 데이터 형식이다.

2. 기본사항
 1) Ansible에서 대부분의 YAML 파일은 목록으로 시작한다.
 2) 목록의 각 항목은 일반적으로 키-값 쌍으로 구성돼있다.
 3) 모든 YAML 파일은 문서의 시작인 ---와 끝인 ...로 나타낸다.
 4) 모든 목록의 구성은 "- "로 시작한다.
  ---
  # 과일 목록
  - Apple
  - Banana
  - BlueBerry
  ...
  
 5) 사전은 키-값 형태로 단순하게 표현된다.
  # 직원 기록
  martin:
    name: Martin D'vloper
    job: Developer
    skill: Elite

 6) 사전 목록, 값이 목록인 사전 또는 둘 다 혼합된 복잡한 데이터 구조도 표현된다.
  # Employee records
  - martin:
      name: Martin D'vloper
      job: Developer
      skills:
        - python
        - perl
        - pascal
  - tabitha:
      name: Tabitha Bitumen
      job: Developer
      skills:
        - lisp
        - fortran
        - erlang

 7) 약어 형태로 표현할 수 있다. => Flow Collections
  ---
  martin: {name: Martin D'vloper, job: Developer, skill: Elite}
  fruits: ['Apple', 'Orange', 'Strawberry', 'Mango']

 8) boolean값도 지정할 수 있다. (yamlint 옵션과 호환하려면 사전에서 boolean값에 소문자 true/false 사용해야 한다.)
  create_key: true
  needs_agent: false
  knows_oop: True
  likes_emacs: TRUE
  uses_cvs: false

 9) value는 | 또는 >를 사용하여 여러 줄로 확장시킬 수 있다.
  9-1) "Literal Block Scalar" |를 사용하여 여러 줄로 확장시키는 것은 새 줄과 모든 후행 공백이 포함된다.
  9-2) "Folded Block Scalar" >를 사용하는 것은 새 줄을 공백으로 접는다.
   => 매우 긴 줄을 쉽게 읽을 수 있게 만든다.
   => 둘 다 들여쓰기가 무시된다.
    include_newlines: |
                exactly as you see
                will appear these three
                lines of poetry

    fold_newlines: >
                this is really a
                single line of text
                despite appearances
   => '\n'를 사용하여 새 줄을 포함하여 적용할 수 있다.
     fold_same_newlines: "a b\nc d\n  e\nf\n"

--------------------------------------------------------------------------------------------

Gotchas

1. 다음의 경우는 YAML 구문 오류가 발생한다.
  foo: somebody said I should put a colon here: so I did
  windows_drive: c:

2. 콜론 뒤에 공백이나 줄 끝을 사용하여 해시값을 따옴표로 묶을 수 있다.
  foo: 'somebody said I should put a colon here: so I did'
  windows_drive: 'c:'

3. 큰 따옴표를 사용할 수 있다.
  foo: "somebody said I should put a colon here: so I did"
  windows_drive: "c:"

4. 홑따옴표와 큰 따옴표의 차이점: 큰 따옴표에서 escape 문자를 사용할 수 있다.
  foo: "a \t TAB and a \n NEWLINE"

5. 변수에 "{{ var }}"를 사용한다. 
   콜론 뒤에 값이 "{"로 시작되면 YAML은 사전이라고 인식하므로 다음과 같이 인용해야 한다.
  foo: "{{ variable }}"

6. 값이 따옴표로 시작하는 경우 값 전체를 따옴표로 묶어야 한다.
  foo: "{{ variable }}/additional/string/literal"
  foo2: "{{ variable }}\\backslashes\\are\\also\\special\\characters"
  foo3: "even if it's just a string literal it must all be quoted"

7. 따옴표로 묶이지 않은 스칼라의 첫 번째 문자로 [] {} > | * & ! % # ' @ ,를 사용할 수 없다.
